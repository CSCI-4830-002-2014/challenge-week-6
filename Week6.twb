<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0925.1717                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource inline='true' name='Sample - Superstore Sales Multi-language (Extract) Extract' version='8.3'>
      <connection class='dataengine' dbname='/Users/samkorn/Downloads/Sample - Superstore Sales Multi-language (Extract).tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[2013 sales (copy)]' formula='if year([Order Date])=2012 then [Sales]&#13;&#10;else NULL end' />
          <calculation column='[Calculation_8821129170240873]' formula='if year([Order Date])=2013 then [Sales]&#13;&#10;else NULL end' />
          <calculation column='[Number of Records]' formula='1' />
          <calculation column='[Supplier]' formula='CASE [Product Name]&#10;  WHEN &quot;*Staples* Highlighting Markers&quot; THEN &quot;*Staples* Highlighting Markers&quot;&#10;  WHEN &quot;*Staples* Letter Opener&quot; THEN &quot;*Staples* Highlighting Markers&quot;&#10;  WHEN &quot;*Staples* Packaging Labels&quot; THEN &quot;*Staples* Highlighting Markers&quot;&#10;  WHEN &quot;*Staples* vLetter Openers, 2/Pack&quot; THEN &quot;*Staples* Highlighting Markers&quot;&#10;  WHEN &quot;3M Hangers With Command Adhesive&quot; THEN &quot;3M Hangers With Command Adhesive&quot;&#10;  WHEN &quot;3M Office Air Cleaner&quot; THEN &quot;3M Hangers With Command Adhesive&quot;&#10;  WHEN &quot;3M Organizer Strips&quot; THEN &quot;3M Hangers With Command Adhesive&quot;&#10;  WHEN &quot;3M Polarizing Light Filter Sleeves&quot; THEN &quot;3M Hangers With Command Adhesive&quot;&#10;  WHEN &quot;3M Polarizing Task Lamp with Clamp Arm, Light Gray&quot; THEN &quot;3M Hangers With Command Adhesive&quot;&#10;  WHEN &quot;Acco 3-Hole Punch&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Clips to Go™ Binder Clips, 24 Clips in Two Sizes&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco D-Ring Binder w/DublLock®&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1&quot;&quot;&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Keyboard-In-A-Box®&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Perma® 2700 Stacking Storage Drawers&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Perma® 3000 Stacking Storage Drawers&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Pressboard Covers with Storage Hooks, 14 7/8&quot;&quot; x 11&quot;&quot;, Dark Blue&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Pressboard Covers with Storage Hooks, 14 7/8&quot;&quot; x 11&quot;&quot;, Executive Red&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Pressboard Covers with Storage Hooks, 14 7/8&quot;&quot; x 11&quot;&quot;, Light Blue&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco PRESSTEX® Data Binder with Storage Hooks, Dark Blue, 14 7/8&quot;&quot; X 11&quot;&quot;&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco PRESSTEX® Data Binder with Storage Hooks, Dark Blue, 9 1/2&quot;&quot; X 11&quot;&quot;&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Recycled 2&quot;&quot; Capacity Laser Printer Hanging Data Binders&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Smartsocket® Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Smartsocket™ Table Surge Protector, 6 Color-Coded Adapter Outlets&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco Suede Grain Vinyl Round Ring Binder&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acco® Hot Clips™ Clips to Go&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Accohide Poly Flexible Ring Binders&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;ACCOHIDE® 3-Ring Binder, Blue, 1&quot;&quot;&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;ACCOHIDE® Binder by Acco&quot; THEN &quot;Acco 3-Hole Punch&quot;&#10;  WHEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme Galleria® Hot Forged Steel Scissors with Colored Handles&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme Hot Forged Carbon Steel Scissors with Nickel-Plated Handles, 3 7/8&quot;&quot; Cut, 8&quot;&quot;L&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme Kleencut® Forged Steel Scissors&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® 8&quot;&quot; Straight Scissors&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® Box Cutter Scissors&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® Design Stainless Steel Bent Scissors&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® Elite Stainless Steel Scissors&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® Forged Steel Scissors with Black Enamel Handles&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® Office Executive Series Stainless Steel Trimmers&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Acme® Preferred Stainless Steel Scissors&quot; THEN &quot;Acme Design Line 8&quot;&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8&quot;&quot; Cut&quot;&#10;  WHEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 4027 File Folder Labels for Dot Matrix Printers, 5000 Labels per Box, White&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 474&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 478&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 479&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 48&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 481&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 482&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 484&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 485&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 487&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 49&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 491&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 492&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 493&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 494&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 496&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 497&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 498&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 501&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 503&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 504&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 506&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 507&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 508&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 51&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 510&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 511&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 514&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 516&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 52&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery 520&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Arch Ring Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Binder Labels&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Binding System Hidden Tab™ Executive Style Index Sets&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Durable Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Durable Poly Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery File Folder Labels&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Flip-Chart Easel Binder, Black&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hanging File Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Heavy-Duty EZD ™ Binder With Locking Rings&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hi-Liter Comfort Grip Fluorescent Highlighter, Yellow Ink&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hi-Liter GlideStik Fluorescent Highlighter, Yellow Ink&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hi-Liter Pen Style Six-Color Fluorescent Set&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hi-Liter® EverBold™ Pen Style Fluorescent Highlighters, 4/Pack&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hi-Liter® Fluorescent Desk Style Markers&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hi-Liter® Smear-Safe Highlighters&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Hole Reinforcements&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Legal 4-Ring Binder&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Non-Stick Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Poly Binder Pockets&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Premier Heavy-Duty Binder with Round Locking Rings&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Printable Repositionable Plastic Tabs&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Reinforcements for Hole-Punch Pages&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Round Ring Poly Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Self-Adhesive Photo Pockets for Polaroid Photos&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Trapezoid Extra Heavy Duty 4&quot;&quot; Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery Trapezoid Ring Binder, 3&quot;&quot; Capacity, Black, 1040 sheets&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery White Multi-Purpose Labels&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery® 3 1/2&quot;&quot; Diskette Storage Pages, 10/Pack&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery® Durable Plastic 1&quot;&quot; Binders&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Avery® Durable Slant Ring Binders With Label Holder&quot; THEN &quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;&#10;  WHEN &quot;Belkin 105-Key Black Keyboard&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 107-key enhanced keyboard, USB/PS/2 interface&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 325VA UPS Surge Protector, 6&apos;&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 5 Outlet SurgeMaster™ Power Centers&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 6 Outlet Metallic Surge Strip&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 7 Outlet SurgeMaster Surge Protector with Phone Protection&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 8 Outlet Surge Protector&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 8 Outlet SurgeMaster II Gold Surge Protector&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin 8 Outlet SurgeMaster II Gold Surge Protector with Phone Protection&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin ErgoBoard™ Keyboard&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin F5C206VTEL 6 Outlet Surge&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin F9M820V08 8 Outlet Surge&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin MediaBoard 104- Keyboard&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin OmniView SE Rackmount Kit&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Belkin Premiere Surge Master II 8-outlet surge protector&quot; THEN &quot;Belkin 105-Key Black Keyboard&quot;&#10;  WHEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston 16701 Slimline Battery Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston 16765 Mini Stand Up Battery Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston 16801 Nautilus™ Battery Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston 1730 StandUp Electric Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston 1799 Powerhouse™ Electric Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston 19500 Mighty Mite Electric Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston Electric Pencil Sharpener, Model 1818, Charcoal Black&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston KS Multi-Size Manual Pencil Sharpener&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston Model 1800 Electric Pencil Sharpener, Gray&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Boston School Pro Electric Pencil Sharpener, 1670&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;BOSTON® Ranger® #55 Pencil Sharpener, Black&quot; THEN &quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;&#10;  WHEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon F603 Scientific Calculator&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon Image Class D660 Copier&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon imageCLASS 2200 Advanced Copier&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon Imageclass D680 Copier / Fax&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon MP100DHII Printing Calculator&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon MP25DIII Desktop Whisper-Quiet Printing Calculator&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon MP41DH Printing Calculator&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon P1-DHIII Palm Printing Calculator&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon PC-428 Personal Copier&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon PC1060 Personal Laser Copier&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon PC1080F Personal Copier&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon PC940 Copier&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Canon S750 Color Inkjet Printer&quot; THEN &quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;&#10;  WHEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Advantage® Foldable Chair Mats for Low Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Antistatic Chair Mats for Low to Medium Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Base for stackable storage shelf, platinum&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Cleatmat Plus™ Chair Mats for High Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Cleatmat® Chair Mats for Medium Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon ClusterMat Chair Mat with Cordless Antistatic Protection&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Delta Triangular Chair Mat, 52&quot;&quot; x 58&quot;&quot;, Clear&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Econocleat® Chair Mats for Low Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Executive Woodline II Cherry Finish Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Expressions Mahogany Wood Desk Collection&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Expressions Punched Metal &amp; Wood Desk Accessories, Black &amp; Cherry&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Expressions Punched Metal &amp; Wood Desk Accessories, Pewter &amp; Cherry&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Expressions™ Desk Accessory, Wood Pencil Holder, Oak&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Expressions™ Desk Accessory, Wood Photo Frame, Mahogany&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Image Series Black Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Imàge® Series Desk Accessories, Clear&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Jumbo ProFile™ Portable File Boxes Graphite/Black&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Pizzaz™ Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Portable Mobile Manager&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Radial Chair Mat for Low to Medium Pile Carpets&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Regeneration Recycled Desk Accessories, Smoke&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Shelf Savers™ Cubes and Bins&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Simplefile® Box Office®&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Spacemaker® Box, Quick-Snap Lid, Clear&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon Wave Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® 200 Class™ Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® 200 Class™ Desk Accessories, Burgundy&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® 300 Class™ Desk Accessories, Black&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® 400 Class™ Desk Accessories, Black Carbon&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® 500 Class™ Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® Executive Woodline II Desk Accessories, Mahogany&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® Expressions™ Wood and Plastic Desk Accessories, Oak&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® Expressions™ Wood Desk Accessories, Oak&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® Gobal File Keepers&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® Image Series Desk Accessories, Burgundy&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Eldon® Wave Desk Accessories&quot; THEN &quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;&#10;  WHEN &quot;Epson C62 Color Inkjet Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson C82 Color Inkjet Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson DFX-8500 Dot Matrix Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson DFX5000+ Dot Matrix Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson FX-2180 Wide Format Dot Matrix Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson FX-980 Dot Matrix Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson LQ-570e Dot Matrix Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson LQ-870 Dot Matrix Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Epson Stylus 1520 Color Inkjet Printer&quot; THEN &quot;Epson C62 Color Inkjet Printer&quot;&#10;  WHEN &quot;Fellowes 17-key keypad for PS/2 interface&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes 8 Outlet Superior Workstation Surge Protector&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes 8 Outlet Superior Workstation Surge Protector w/o Phone/Fax/Modem Protection&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Bankers Box™ Staxonsteel® Drawer File/Stacking System&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Bankers Box™ Stor/Drawer® Steel Plus™&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Bases and Tops For Staxonsteel®/High-Stak® Systems&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Basic 104-Key Keyboard, Platinum&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Binding Cases&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Black Plastic Comb Bindings&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Command Center 5-outlet power strip&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes EZ Multi-Media Keyboard&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes High-Stak® Drawer Files&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Internet Keyboard, Platinum&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Mighty 8 Compact Surge Protector&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Mobile File Cart, Black&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Mobile Numeric Keypad, Graphite&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Neat Ideas® Storage Cubes&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Officeware™ Wire Shelving&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes PB300 Plastic Comb Binding Machine&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes PB500 Electric Punch Plastic Comb Binding Machine with Manual Bind&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Personal Hanging Folder Files, Navy&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Premier Superior Surge Suppressor, 10-Outlet, With Phone and Remote&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Recycled Storage Drawers&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Smart Design 104-Key Enhanced Keyboard, PS/2 Adapter, Platinum&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Smart Surge Ten-Outlet Protector, Platinum&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Staxonsteel® Drawer Files&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Stor/Drawer® Steel Plus™ Storage Drawers&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Strictly Business® Drawer File, Letter/Legal Size&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Super Stor/Drawer®&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Super Stor/Drawer® Files&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Superior 10 Outlet Split Surge Protector&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Fellowes Twister Kit, Gray/Clear, 3/pkg&quot; THEN &quot;Fellowes 17-key keypad for PS/2 interface&quot;&#10;  WHEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 2111 Invitation™ Series Corner Table&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 4-Shelf Metal Bookcases&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 4060 Series Tables&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 4070 Series Pagoda™ Armless Upholstered Stacking Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 4070 Series Pagoda™ Round Back Stacking Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 4700 Series Mobuis™ Mid-Back Task Chairs with Adjustable Arms&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 5100 Series Wood Tables&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 61000 Series Interactive Training Tables&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon 94000 Series Round Tables&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Comfortask® Task/Swivel Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Deluxe Fabric Upholstered Stacking Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Deluxe Fabric Upholstered Stacking Chairs, Rounded Back&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Every-Day® Chair Series Swivel Task Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon GuestStacker Chair&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon iLevel™ Computer Training Table&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Metal Bookcases, Black&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Metal Bookcases, Putty&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Multipurpose Stacking Arm Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Non-Folding Utility Tables&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Olson Stacker Stools&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Pagoda™ Stacking Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Rectangular Conference Tables&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Hon Valutask™ Swivel Chairs&quot; THEN &quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;&#10;  WHEN &quot;Newell 307&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 308&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 309&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 31&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 310&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 312&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 314&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 315&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 318&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 320&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 321&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 323&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 325&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 326&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 327&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 329&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 332&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 333&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 335&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 336&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 337&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 338&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 339&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 340&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 342&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 343&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 346&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 35&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell 351&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Newell® 3-Hole Punched Plastic Slotted Magazine Holders for Binders&quot; THEN &quot;Newell 307&quot;&#10;  WHEN &quot;Sony IBM Color Diskettes, 25/Pack&quot; THEN &quot;Sony IBM Color Diskettes, 25/Pack&quot;&#10;  WHEN &quot;Sony MFD2HD Formatted Diskettes, 10/Pack&quot; THEN &quot;Sony IBM Color Diskettes, 25/Pack&quot;&#10;  WHEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones 1&quot;&quot; Hanging DublLock® Ring Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones 14 Line Acrylic Coated Pressboard Data Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Custom Binder Spines &amp; Labels&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones DublLock® D-Ring Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Easy Flow II™ Sheet Lifters&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Elliptical Ring 3 1/2&quot;&quot; Capacity Binders, 800 sheets&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Hanging View Binder, White, 1&quot;&quot;&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Impact Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Ledger-Size, Piano-Hinge Binder, 2&quot;&quot;, Blue&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Standard D-Ring Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Suede Grain Vinyl Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones Turn Tabs Binder Tool for Ring Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Wilson Jones® Four-Pocket Poly Binders&quot; THEN &quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;&#10;  WHEN &quot;Xerox 188&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1880&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1881&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1882&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1883&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1885&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1887&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1888&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1891&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1892&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1893&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1894&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1895&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1896&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1897&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1898&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1899&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 19&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 190&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1903&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1904&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1905&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1906&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1907&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1908&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 191&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1910&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1916&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1917&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1919&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1920&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1922&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1923&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1924&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1926&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1927&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1928&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1929&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 193&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1930&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1932&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1933&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1934&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1935&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1936&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1937&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1938&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1939&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 194&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1940&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1941&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1947&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1948&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1949&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 195&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1950&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1951&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1952&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1953&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1954&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1959&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 196&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1961&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1962&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1963&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1964&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1966&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1968&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 197&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1971&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1972&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1973&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1974&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1976&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1977&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1978&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1979&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 198&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1980&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1981&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1982&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1983&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1984&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1985&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1986&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1988&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1989&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 199&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1991&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1992&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1993&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1994&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1995&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1996&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1997&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 1998&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 2&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 20&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 200&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 204&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 207&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 209&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 21&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 210&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 212&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 213&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 214&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 215&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 216&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 217&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 220&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 221&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 223&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 224&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 226&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 227&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 229&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 23&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 231&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot; THEN &quot;Xerox 188&quot;&#10;  WHEN &quot;Xerox Blank Computer Paper&quot; THEN &quot;Xerox 188&quot;&#10;  ELSE &quot;Zoom V.92 V.44 PCI Internal Controllerless FaxModem&quot;&#10;END' />
        </calculations>
        <refresh increment-key='' incremental-updates='false'>
          <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='16798' timestamp-start='2012-10-25 18:47:40.460' />
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Bestellpriorität</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bestellpriorität]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Bestellpriorität</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Hoch&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Sehr hoch&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categoria do produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Categoria do produto]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Categoria do produto</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Móveis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tecnologia&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categoría de producto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Categoría de producto]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Categoría de producto</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Muebles&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tecnología&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Catégorie de produit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Catégorie de produit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Catégorie de produit</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Fournitures de bureau&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technologie&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1523</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zibo&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>60</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contenedor de productos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contenedor de productos]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Contenedor de productos</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Bolsa para envolver&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tambor jumbo&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>37</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>6</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;South America&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>35</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Algeria&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Viet Nam&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>53</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3403</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>3403.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>62</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3403</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Davies Bruce&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zachary Yu&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>63</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Small Business&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.25</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>44</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Embalagem do produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Embalagem do produto]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Embalagem do produto</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Caixa grande&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tambor Jumbo&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>38</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Emballage du produit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Emballage du produit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Emballage du produit</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Bidon Jumbo&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Petite boîte&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>39</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Kundensegment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Kundensegment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Kundensegment</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Home-Office&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Unternehmen&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mode d&apos;expédition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mode d&apos;expédition]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Mode d&apos;expédition</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Camion de livraison&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Fret aérien régulier&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Modo de envio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Modo de envio]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Modo de envio</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Caminhão de entrega&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Transporte aéreo expresso&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Modo de envío</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Modo de envío]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Modo de envío</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aéreo expreso&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Camión de transporte&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ordenar prioridad</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ordenar prioridad]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ordenar prioridad</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alto&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;No especificado&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders$</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1427</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='datetime'>#2010-01-01 00:00:00#</statistic>
              <statistic aggregation='Max' datatype='datetime'>#2013-12-31 00:00:00#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>21</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11270</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>91591.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>65</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>22</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Critical&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Not Specified&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>23</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1725</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;WC2A&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>61</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prioridade do pedido</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Prioridade do pedido]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Prioridade do pedido</remote-alias>
            <ordinal>24</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alta&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Urgente&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Priorité de commande</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Priorité de commande]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Priorité de commande</remote-alias>
            <ordinal>25</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Cruciale&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Non indiquée&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>26</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>54</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>27</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>28</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Jumbo Box&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wrap Bag&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>40</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>29</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1263</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zoom V.92 V.44 PCI Internal Controllerless FaxModem&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>59</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>30</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Appliances&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Telephones and Communication&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>45</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Produkt-Subkategorie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Produkt-Subkategorie]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Produkt-Subkategorie</remote-alias>
            <ordinal>31</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Binder und Binder-Zubehör&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Umschläge&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>46</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Produktkategorie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Produktkategorie]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Produktkategorie</remote-alias>
            <ordinal>32</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Bürobedarf&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technologie&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Produktverpackung</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Produktverpackung]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Produktverpackung</remote-alias>
            <ordinal>33</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Großes Paket&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wickelbeutel&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>36</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>34</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14293</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-17685.760000000002</statistic>
              <statistic aggregation='Max' datatype='real'>60844.298900000009</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>66</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>35</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>139</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>180.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>55</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>36</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>37</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16798</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>26399.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>68</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>38</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>15416</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.3200000000000001</statistic>
              <statistic aggregation='Max' datatype='real'>100119.16</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>67</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment client</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment client]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment client</remote-alias>
            <ordinal>39</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consommateur&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Petite entreprise&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segmento de cliente</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segmento de cliente]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segmento de cliente</remote-alias>
            <ordinal>40</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumidor&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Pequeña empresa&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segmento do cliente</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segmento do cliente]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segmento do cliente</remote-alias>
            <ordinal>41</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumidor&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Pequenas empresas&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>42</ordinal>
            <family>Orders$</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1459</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='datetime'>#2010-01-02 00:00:00#</statistic>
              <statistic aggregation='Max' datatype='datetime'>#2014-01-17 00:00:00#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>43</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Delivery Truck&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Regular Air&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>44</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>652</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.48999999999999999</statistic>
              <statistic aggregation='Max' datatype='real'>164.72999999999999</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>57</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sous-catégorie de produit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sous-catégorie de produit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sous-catégorie de produit</remote-alias>
            <ordinal>45</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Appareils&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Téléphones et communication&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>47</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>46</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>149</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Addis Ababa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zhejiang Sheng&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>56</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subcategoria do produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subcategoria do produto]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Subcategoria do produto</remote-alias>
            <ordinal>47</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aparelhos&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tesouras, réguas e estiletes&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>48</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subcategoría de producto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subcategoría de producto]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Subcategoría de producto</remote-alias>
            <ordinal>48</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Almacenamiento y organización&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tijeras, reglas y cortadoras&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>49</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unique cust loc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unique cust loc]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Unique cust loc</remote-alias>
            <ordinal>49</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3403</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron BergmanAsiaPakistanSindhKarachi&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zuschuss DonatelliSouth AmericaBrazilMinas GeraisBelo Horizonte&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>64</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>50</ordinal>
            <family>Orders$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>751</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.98999999999999999</statistic>
              <statistic aggregation='Max' datatype='real'>6783.0200000000004</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>58</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Versandart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Versandart]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Versandart</remote-alias>
            <ordinal>51</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Express Air&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Regular Air&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品子类别</remote-name>
            <remote-type>129</remote-type>
            <local-name>[产品子类别]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>产品子类别</remote-alias>
            <ordinal>52</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;书夹和书夹附件&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;计算机外围设备&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>50</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品容器</remote-name>
            <remote-type>129</remote-type>
            <local-name>[产品容器]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>产品容器</remote-alias>
            <ordinal>53</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;中号箱子&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;超大鼓&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>41</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品类别</remote-name>
            <remote-type>129</remote-type>
            <local-name>[产品类别]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>产品类别</remote-alias>
            <ordinal>54</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;办公用品&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;技术&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>出荷モード</remote-name>
            <remote-type>129</remote-type>
            <local-name>[出荷モード]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>出荷モード</remote-alias>
            <ordinal>55</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;通常航空便&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;配送トラック&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>客户细分</remote-name>
            <remote-type>129</remote-type>
            <local-name>[客户细分]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>客户细分</remote-alias>
            <ordinal>56</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;公司&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;消费者&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>注文の優先度</remote-name>
            <remote-type>129</remote-type>
            <local-name>[注文の優先度]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>注文の優先度</remote-alias>
            <ordinal>57</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;中規模&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;高&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>装运模式</remote-name>
            <remote-type>129</remote-type>
            <local-name>[装运模式]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>装运模式</remote-alias>
            <ordinal>58</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;普通空运&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;货车&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>製品カテゴリー</remote-name>
            <remote-type>129</remote-type>
            <local-name>[製品カテゴリー]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>製品カテゴリー</remote-alias>
            <ordinal>59</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;テクノロジー&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;家具&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>製品コンテナー</remote-name>
            <remote-type>129</remote-type>
            <local-name>[製品コンテナー]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>製品コンテナー</remote-alias>
            <ordinal>60</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;ジャンボ ドラム&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;特大ボックス&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>42</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>製品サブカテゴリー</remote-name>
            <remote-type>129</remote-type>
            <local-name>[製品サブカテゴリー]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>製品サブカテゴリー</remote-alias>
            <ordinal>61</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;オフィス家具&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;電話と通信&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>51</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单优先级</remote-name>
            <remote-type>129</remote-type>
            <local-name>[订单优先级]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>订单优先级</remote-alias>
            <ordinal>62</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;严重&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;高&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>顧客区分</remote-name>
            <remote-type>129</remote-type>
            <local-name>[顧客区分]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>顧客区分</remote-alias>
            <ordinal>63</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;ホーム オフィス&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;消費者&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>고객 세그먼트</remote-name>
            <remote-type>129</remote-type>
            <local-name>[고객 세그먼트]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>고객 세그먼트</remote-alias>
            <ordinal>64</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;개인 사무실&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;중소 기업&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>선적 모드</remote-name>
            <remote-type>129</remote-type>
            <local-name>[선적 모드]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>선적 모드</remote-alias>
            <ordinal>65</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;배송 트럭&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;특급 항공&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>제품 범주</remote-name>
            <remote-type>129</remote-type>
            <local-name>[제품 범주]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>제품 범주</remote-alias>
            <ordinal>66</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;가구&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;사무용품&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>제품 컨테이너</remote-name>
            <remote-type>129</remote-type>
            <local-name>[제품 컨테이너]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>제품 컨테이너</remote-alias>
            <ordinal>67</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;작은 상자&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;포장 백&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>43</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>제품 하위 범주</remote-name>
            <remote-type>129</remote-type>
            <local-name>[제품 하위 범주]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>제품 하위 범주</remote-alias>
            <ordinal>68</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;가위, 자 및 트리머&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;펜 및 미술 용품&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>52</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>주문 우선 순위</remote-name>
            <remote-type>129</remote-type>
            <local-name>[주문 우선 순위]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>주문 우선 순위</remote-alias>
            <ordinal>69</ordinal>
            <family>Orders$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;낮음&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;지정되지 않음&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2012 sales' datatype='real' name='[2013 sales (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Order Date])=2012 then [Sales]&#13;&#10;else NULL end' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Calculation_1641214165608856:qk]&quot;' value='Sales' />
          <alias key='&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales est (copy):qk]&quot;' value='Units' />
        </aliases>
      </column>
      <column datatype='string' hidden='true' name='[Bestellpriorität]' role='dimension' type='nominal'>
      </column>
      <column caption='Sales est' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Churn Rate])*(1+[Parameters].[Sales Growth])' />
      </column>
      <column caption='2013 sales' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_8821129170240873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Order Date])=2013 then [Sales]&#13;&#10;else NULL end' />
      </column>
      <column caption='Gross profit ratio' datatype='real' default-format='p0.0%' name='[Calculation_9100813121824802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Annual sales growth' datatype='real' default-format='p0%' name='[Calculation_9411129161810124]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_8821129170240873])&#13;&#10;/&#13;&#10;SUM([2013 sales (copy)])&#13;&#10;-&#13;&#10;1' />
      </column>
      <column datatype='string' hidden='true' name='[Categoria do produto]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Categoría de producto]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Catégorie de produit]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Contenedor de productos]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal'>
      </column>
      <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Rank customer' datatype='real' hidden='true' name='[Cust % rank]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[Customer ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' hidden='true' name='[Customer LTV]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Avg' datatype='real' hidden='true' name='[Days as customer]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Discount]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Embalagem do produto]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Emballage du produit]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[F34]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[F73]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Kundensegment]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Mode d&apos;expédition]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Modo de envio]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Modo de envío]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' hidden='true' name='[New Year]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Ordenar prioridad]' role='dimension' type='nominal'>
      </column>
      <column datatype='date' datatype-customized='true' name='[Order Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[Order ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Order amount rank' datatype='real' default-format='p0%' hidden='true' name='[Order amount percentile]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='real' default-format='n#,##0;-#,##0' name='[Order number]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Per customer sequence of orders</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Prioridade do pedido]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Priorité de commande]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Product Base Margin]' role='measure' type='quantitative'>
      </column>
      <column caption='Department' datatype='string' name='[Product Category]' role='dimension' type='nominal'>
      </column>
      <column caption='Container' datatype='string' name='[Product Container]' role='dimension' type='nominal'>
      </column>
      <column caption='Item' datatype='string' name='[Product Name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>We don&apos;t translate this field</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category' datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Produkt-Subkategorie]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Produktkategorie]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Produktverpackung]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' hidden='true' name='[Profit factor]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column caption='Order quantity' datatype='real' name='[Quantity ordered new]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' hidden='true' name='[RAND]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='real' name='[Row ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Units est' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity ordered new]*(1-[Parameters].[Churn Rate])*(1+[Parameters].[Sales Growth]),0)' />
      </column>
      <column datatype='real' hidden='true' name='[Sales factor]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Segment client]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Segmento de cliente]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Segmento do cliente]' role='dimension' type='nominal'>
      </column>
      <column datatype='date' datatype-customized='true' name='[Ship Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Shipping Cost]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Sous-catégorie de produit]' role='dimension' type='nominal'>
      </column>
      <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' hidden='true' name='[Subcategoria do produto]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[Subcategoría de producto]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Supplier]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Zoom V.92 V.44 PCI Internal Controllerless FaxModem&quot;'>
          <bin value='&quot;*Staples* Highlighting Markers&quot;'>
            <value>&quot;*Staples* Highlighting Markers&quot;</value>
            <value>&quot;*Staples* Letter Opener&quot;</value>
            <value>&quot;*Staples* Packaging Labels&quot;</value>
            <value>&quot;*Staples* vLetter Openers, 2/Pack&quot;</value>
          </bin>
          <bin value='&quot;3M Hangers With Command Adhesive&quot;'>
            <value>&quot;3M Hangers With Command Adhesive&quot;</value>
            <value>&quot;3M Office Air Cleaner&quot;</value>
            <value>&quot;3M Organizer Strips&quot;</value>
            <value>&quot;3M Polarizing Light Filter Sleeves&quot;</value>
            <value>&quot;3M Polarizing Task Lamp with Clamp Arm, Light Gray&quot;</value>
          </bin>
          <bin value='&quot;Acco 3-Hole Punch&quot;'>
            <value>&quot;Acco 3-Hole Punch&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
            <value>&quot;Acco Clips to Go™ Binder Clips, 24 Clips in Two Sizes&quot;</value>
            <value>&quot;Acco D-Ring Binder w/DublLock®&quot;</value>
            <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
            <value>&quot;Acco Keyboard-In-A-Box®&quot;</value>
            <value>&quot;Acco Perma® 2700 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma® 3000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
            <value>&quot;Acco PRESSTEX® Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX® Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
            <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
            <value>&quot;Acco Smartsocket® Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
            <value>&quot;Acco Smartsocket™ Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
            <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
            <value>&quot;Acco® Hot Clips™ Clips to Go&quot;</value>
            <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
            <value>&quot;ACCOHIDE® 3-Ring Binder, Blue, 1\&quot;&quot;</value>
            <value>&quot;ACCOHIDE® Binder by Acco&quot;</value>
          </bin>
          <bin value='&quot;Acme Design Line 8\&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8\&quot; Cut&quot;'>
            <value>&quot;Acme Design Line 8\&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8\&quot; Cut&quot;</value>
            <value>&quot;Acme Galleria® Hot Forged Steel Scissors with Colored Handles&quot;</value>
            <value>&quot;Acme Hot Forged Carbon Steel Scissors with Nickel-Plated Handles, 3 7/8\&quot; Cut, 8\&quot;L&quot;</value>
            <value>&quot;Acme Kleencut® Forged Steel Scissors&quot;</value>
            <value>&quot;Acme® 8\&quot; Straight Scissors&quot;</value>
            <value>&quot;Acme® Box Cutter Scissors&quot;</value>
            <value>&quot;Acme® Design Stainless Steel Bent Scissors&quot;</value>
            <value>&quot;Acme® Elite Stainless Steel Scissors&quot;</value>
            <value>&quot;Acme® Forged Steel Scissors with Black Enamel Handles&quot;</value>
            <value>&quot;Acme® Office Executive Series Stainless Steel Trimmers&quot;</value>
            <value>&quot;Acme® Preferred Stainless Steel Scissors&quot;</value>
          </bin>
          <bin value='&quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;'>
            <value>&quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;</value>
            <value>&quot;Avery 4027 File Folder Labels for Dot Matrix Printers, 5000 Labels per Box, White&quot;</value>
            <value>&quot;Avery 474&quot;</value>
            <value>&quot;Avery 478&quot;</value>
            <value>&quot;Avery 479&quot;</value>
            <value>&quot;Avery 48&quot;</value>
            <value>&quot;Avery 481&quot;</value>
            <value>&quot;Avery 482&quot;</value>
            <value>&quot;Avery 484&quot;</value>
            <value>&quot;Avery 485&quot;</value>
            <value>&quot;Avery 487&quot;</value>
            <value>&quot;Avery 49&quot;</value>
            <value>&quot;Avery 491&quot;</value>
            <value>&quot;Avery 492&quot;</value>
            <value>&quot;Avery 493&quot;</value>
            <value>&quot;Avery 494&quot;</value>
            <value>&quot;Avery 496&quot;</value>
            <value>&quot;Avery 497&quot;</value>
            <value>&quot;Avery 498&quot;</value>
            <value>&quot;Avery 501&quot;</value>
            <value>&quot;Avery 503&quot;</value>
            <value>&quot;Avery 504&quot;</value>
            <value>&quot;Avery 506&quot;</value>
            <value>&quot;Avery 507&quot;</value>
            <value>&quot;Avery 508&quot;</value>
            <value>&quot;Avery 51&quot;</value>
            <value>&quot;Avery 510&quot;</value>
            <value>&quot;Avery 511&quot;</value>
            <value>&quot;Avery 514&quot;</value>
            <value>&quot;Avery 516&quot;</value>
            <value>&quot;Avery 52&quot;</value>
            <value>&quot;Avery 520&quot;</value>
            <value>&quot;Avery Arch Ring Binders&quot;</value>
            <value>&quot;Avery Binder Labels&quot;</value>
            <value>&quot;Avery Binding System Hidden Tab™ Executive Style Index Sets&quot;</value>
            <value>&quot;Avery Durable Binders&quot;</value>
            <value>&quot;Avery Durable Poly Binders&quot;</value>
            <value>&quot;Avery File Folder Labels&quot;</value>
            <value>&quot;Avery Flip-Chart Easel Binder, Black&quot;</value>
            <value>&quot;Avery Hanging File Binders&quot;</value>
            <value>&quot;Avery Heavy-Duty EZD ™ Binder With Locking Rings&quot;</value>
            <value>&quot;Avery Hi-Liter Comfort Grip Fluorescent Highlighter, Yellow Ink&quot;</value>
            <value>&quot;Avery Hi-Liter GlideStik Fluorescent Highlighter, Yellow Ink&quot;</value>
            <value>&quot;Avery Hi-Liter Pen Style Six-Color Fluorescent Set&quot;</value>
            <value>&quot;Avery Hi-Liter® EverBold™ Pen Style Fluorescent Highlighters, 4/Pack&quot;</value>
            <value>&quot;Avery Hi-Liter® Fluorescent Desk Style Markers&quot;</value>
            <value>&quot;Avery Hi-Liter® Smear-Safe Highlighters&quot;</value>
            <value>&quot;Avery Hole Reinforcements&quot;</value>
            <value>&quot;Avery Legal 4-Ring Binder&quot;</value>
            <value>&quot;Avery Non-Stick Binders&quot;</value>
            <value>&quot;Avery Poly Binder Pockets&quot;</value>
            <value>&quot;Avery Premier Heavy-Duty Binder with Round Locking Rings&quot;</value>
            <value>&quot;Avery Printable Repositionable Plastic Tabs&quot;</value>
            <value>&quot;Avery Reinforcements for Hole-Punch Pages&quot;</value>
            <value>&quot;Avery Round Ring Poly Binders&quot;</value>
            <value>&quot;Avery Self-Adhesive Photo Pockets for Polaroid Photos&quot;</value>
            <value>&quot;Avery Trapezoid Extra Heavy Duty 4\&quot; Binders&quot;</value>
            <value>&quot;Avery Trapezoid Ring Binder, 3\&quot; Capacity, Black, 1040 sheets&quot;</value>
            <value>&quot;Avery White Multi-Purpose Labels&quot;</value>
            <value>&quot;Avery® 3 1/2\&quot; Diskette Storage Pages, 10/Pack&quot;</value>
            <value>&quot;Avery® Durable Plastic 1\&quot; Binders&quot;</value>
            <value>&quot;Avery® Durable Slant Ring Binders With Label Holder&quot;</value>
          </bin>
          <bin value='&quot;Belkin 105-Key Black Keyboard&quot;'>
            <value>&quot;Belkin 105-Key Black Keyboard&quot;</value>
            <value>&quot;Belkin 107-key enhanced keyboard, USB/PS/2 interface&quot;</value>
            <value>&quot;Belkin 325VA UPS Surge Protector, 6&apos;&quot;</value>
            <value>&quot;Belkin 5 Outlet SurgeMaster™ Power Centers&quot;</value>
            <value>&quot;Belkin 6 Outlet Metallic Surge Strip&quot;</value>
            <value>&quot;Belkin 7 Outlet SurgeMaster Surge Protector with Phone Protection&quot;</value>
            <value>&quot;Belkin 8 Outlet Surge Protector&quot;</value>
            <value>&quot;Belkin 8 Outlet SurgeMaster II Gold Surge Protector&quot;</value>
            <value>&quot;Belkin 8 Outlet SurgeMaster II Gold Surge Protector with Phone Protection&quot;</value>
            <value>&quot;Belkin ErgoBoard™ Keyboard&quot;</value>
            <value>&quot;Belkin F5C206VTEL 6 Outlet Surge&quot;</value>
            <value>&quot;Belkin F9M820V08 8 Outlet Surge&quot;</value>
            <value>&quot;Belkin MediaBoard 104- Keyboard&quot;</value>
            <value>&quot;Belkin OmniView SE Rackmount Kit&quot;</value>
            <value>&quot;Belkin Premiere Surge Master II 8-outlet surge protector&quot;</value>
          </bin>
          <bin value='&quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;'>
            <value>&quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;</value>
            <value>&quot;Boston 16701 Slimline Battery Pencil Sharpener&quot;</value>
            <value>&quot;Boston 16765 Mini Stand Up Battery Pencil Sharpener&quot;</value>
            <value>&quot;Boston 16801 Nautilus™ Battery Pencil Sharpener&quot;</value>
            <value>&quot;Boston 1730 StandUp Electric Pencil Sharpener&quot;</value>
            <value>&quot;Boston 1799 Powerhouse™ Electric Pencil Sharpener&quot;</value>
            <value>&quot;Boston 19500 Mighty Mite Electric Pencil Sharpener&quot;</value>
            <value>&quot;Boston Electric Pencil Sharpener, Model 1818, Charcoal Black&quot;</value>
            <value>&quot;Boston KS Multi-Size Manual Pencil Sharpener&quot;</value>
            <value>&quot;Boston Model 1800 Electric Pencil Sharpener, Gray&quot;</value>
            <value>&quot;Boston School Pro Electric Pencil Sharpener, 1670&quot;</value>
            <value>&quot;BOSTON® Ranger® \#55 Pencil Sharpener, Black&quot;</value>
          </bin>
          <bin value='&quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;'>
            <value>&quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;</value>
            <value>&quot;Canon F603 Scientific Calculator&quot;</value>
            <value>&quot;Canon Image Class D660 Copier&quot;</value>
            <value>&quot;Canon imageCLASS 2200 Advanced Copier&quot;</value>
            <value>&quot;Canon Imageclass D680 Copier / Fax&quot;</value>
            <value>&quot;Canon MP100DHII Printing Calculator&quot;</value>
            <value>&quot;Canon MP25DIII Desktop Whisper-Quiet Printing Calculator&quot;</value>
            <value>&quot;Canon MP41DH Printing Calculator&quot;</value>
            <value>&quot;Canon P1-DHIII Palm Printing Calculator&quot;</value>
            <value>&quot;Canon PC-428 Personal Copier&quot;</value>
            <value>&quot;Canon PC1060 Personal Laser Copier&quot;</value>
            <value>&quot;Canon PC1080F Personal Copier&quot;</value>
            <value>&quot;Canon PC940 Copier&quot;</value>
            <value>&quot;Canon S750 Color Inkjet Printer&quot;</value>
          </bin>
          <bin value='&quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;'>
            <value>&quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;</value>
            <value>&quot;Eldon Advantage® Foldable Chair Mats for Low Pile Carpets&quot;</value>
            <value>&quot;Eldon Antistatic Chair Mats for Low to Medium Pile Carpets&quot;</value>
            <value>&quot;Eldon Base for stackable storage shelf, platinum&quot;</value>
            <value>&quot;Eldon Cleatmat Plus™ Chair Mats for High Pile Carpets&quot;</value>
            <value>&quot;Eldon Cleatmat® Chair Mats for Medium Pile Carpets&quot;</value>
            <value>&quot;Eldon ClusterMat Chair Mat with Cordless Antistatic Protection&quot;</value>
            <value>&quot;Eldon Delta Triangular Chair Mat, 52\&quot; x 58\&quot;, Clear&quot;</value>
            <value>&quot;Eldon Econocleat® Chair Mats for Low Pile Carpets&quot;</value>
            <value>&quot;Eldon Executive Woodline II Cherry Finish Desk Accessories&quot;</value>
            <value>&quot;Eldon Expressions Mahogany Wood Desk Collection&quot;</value>
            <value>&quot;Eldon Expressions Punched Metal &amp; Wood Desk Accessories, Black &amp; Cherry&quot;</value>
            <value>&quot;Eldon Expressions Punched Metal &amp; Wood Desk Accessories, Pewter &amp; Cherry&quot;</value>
            <value>&quot;Eldon Expressions™ Desk Accessory, Wood Pencil Holder, Oak&quot;</value>
            <value>&quot;Eldon Expressions™ Desk Accessory, Wood Photo Frame, Mahogany&quot;</value>
            <value>&quot;Eldon Image Series Black Desk Accessories&quot;</value>
            <value>&quot;Eldon Imàge® Series Desk Accessories, Clear&quot;</value>
            <value>&quot;Eldon Jumbo ProFile™ Portable File Boxes Graphite/Black&quot;</value>
            <value>&quot;Eldon Pizzaz™ Desk Accessories&quot;</value>
            <value>&quot;Eldon Portable Mobile Manager&quot;</value>
            <value>&quot;Eldon Radial Chair Mat for Low to Medium Pile Carpets&quot;</value>
            <value>&quot;Eldon Regeneration Recycled Desk Accessories, Smoke&quot;</value>
            <value>&quot;Eldon Shelf Savers™ Cubes and Bins&quot;</value>
            <value>&quot;Eldon Simplefile® Box Office®&quot;</value>
            <value>&quot;Eldon Spacemaker® Box, Quick-Snap Lid, Clear&quot;</value>
            <value>&quot;Eldon Wave Desk Accessories&quot;</value>
            <value>&quot;Eldon® 200 Class™ Desk Accessories&quot;</value>
            <value>&quot;Eldon® 200 Class™ Desk Accessories, Burgundy&quot;</value>
            <value>&quot;Eldon® 300 Class™ Desk Accessories, Black&quot;</value>
            <value>&quot;Eldon® 400 Class™ Desk Accessories, Black Carbon&quot;</value>
            <value>&quot;Eldon® 500 Class™ Desk Accessories&quot;</value>
            <value>&quot;Eldon® Executive Woodline II Desk Accessories, Mahogany&quot;</value>
            <value>&quot;Eldon® Expressions™ Wood and Plastic Desk Accessories, Oak&quot;</value>
            <value>&quot;Eldon® Expressions™ Wood Desk Accessories, Oak&quot;</value>
            <value>&quot;Eldon® Gobal File Keepers&quot;</value>
            <value>&quot;Eldon® Image Series Desk Accessories, Burgundy&quot;</value>
            <value>&quot;Eldon® Wave Desk Accessories&quot;</value>
          </bin>
          <bin value='&quot;Epson C62 Color Inkjet Printer&quot;'>
            <value>&quot;Epson C62 Color Inkjet Printer&quot;</value>
            <value>&quot;Epson C82 Color Inkjet Printer&quot;</value>
            <value>&quot;Epson DFX-8500 Dot Matrix Printer&quot;</value>
            <value>&quot;Epson DFX5000+ Dot Matrix Printer&quot;</value>
            <value>&quot;Epson FX-2180 Wide Format Dot Matrix Printer&quot;</value>
            <value>&quot;Epson FX-980 Dot Matrix Printer&quot;</value>
            <value>&quot;Epson LQ-570e Dot Matrix Printer&quot;</value>
            <value>&quot;Epson LQ-870 Dot Matrix Printer&quot;</value>
            <value>&quot;Epson Stylus 1520 Color Inkjet Printer&quot;</value>
          </bin>
          <bin value='&quot;Fellowes 17-key keypad for PS/2 interface&quot;'>
            <value>&quot;Fellowes 17-key keypad for PS/2 interface&quot;</value>
            <value>&quot;Fellowes 8 Outlet Superior Workstation Surge Protector&quot;</value>
            <value>&quot;Fellowes 8 Outlet Superior Workstation Surge Protector w/o Phone/Fax/Modem Protection&quot;</value>
            <value>&quot;Fellowes Bankers Box™ Staxonsteel® Drawer File/Stacking System&quot;</value>
            <value>&quot;Fellowes Bankers Box™ Stor/Drawer® Steel Plus™&quot;</value>
            <value>&quot;Fellowes Bases and Tops For Staxonsteel®/High-Stak® Systems&quot;</value>
            <value>&quot;Fellowes Basic 104-Key Keyboard, Platinum&quot;</value>
            <value>&quot;Fellowes Binding Cases&quot;</value>
            <value>&quot;Fellowes Black Plastic Comb Bindings&quot;</value>
            <value>&quot;Fellowes Command Center 5-outlet power strip&quot;</value>
            <value>&quot;Fellowes EZ Multi-Media Keyboard&quot;</value>
            <value>&quot;Fellowes High-Stak® Drawer Files&quot;</value>
            <value>&quot;Fellowes Internet Keyboard, Platinum&quot;</value>
            <value>&quot;Fellowes Mighty 8 Compact Surge Protector&quot;</value>
            <value>&quot;Fellowes Mobile File Cart, Black&quot;</value>
            <value>&quot;Fellowes Mobile Numeric Keypad, Graphite&quot;</value>
            <value>&quot;Fellowes Neat Ideas® Storage Cubes&quot;</value>
            <value>&quot;Fellowes Officeware™ Wire Shelving&quot;</value>
            <value>&quot;Fellowes PB300 Plastic Comb Binding Machine&quot;</value>
            <value>&quot;Fellowes PB500 Electric Punch Plastic Comb Binding Machine with Manual Bind&quot;</value>
            <value>&quot;Fellowes Personal Hanging Folder Files, Navy&quot;</value>
            <value>&quot;Fellowes Premier Superior Surge Suppressor, 10-Outlet, With Phone and Remote&quot;</value>
            <value>&quot;Fellowes Recycled Storage Drawers&quot;</value>
            <value>&quot;Fellowes Smart Design 104-Key Enhanced Keyboard, PS/2 Adapter, Platinum&quot;</value>
            <value>&quot;Fellowes Smart Surge Ten-Outlet Protector, Platinum&quot;</value>
            <value>&quot;Fellowes Staxonsteel® Drawer Files&quot;</value>
            <value>&quot;Fellowes Stor/Drawer® Steel Plus™ Storage Drawers&quot;</value>
            <value>&quot;Fellowes Strictly Business® Drawer File, Letter/Legal Size&quot;</value>
            <value>&quot;Fellowes Super Stor/Drawer®&quot;</value>
            <value>&quot;Fellowes Super Stor/Drawer® Files&quot;</value>
            <value>&quot;Fellowes Superior 10 Outlet Split Surge Protector&quot;</value>
            <value>&quot;Fellowes Twister Kit, Gray/Clear, 3/pkg&quot;</value>
          </bin>
          <bin value='&quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;'>
            <value>&quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;</value>
            <value>&quot;Hon 2111 Invitation™ Series Corner Table&quot;</value>
            <value>&quot;Hon 4-Shelf Metal Bookcases&quot;</value>
            <value>&quot;Hon 4060 Series Tables&quot;</value>
            <value>&quot;Hon 4070 Series Pagoda™ Armless Upholstered Stacking Chairs&quot;</value>
            <value>&quot;Hon 4070 Series Pagoda™ Round Back Stacking Chairs&quot;</value>
            <value>&quot;Hon 4700 Series Mobuis™ Mid-Back Task Chairs with Adjustable Arms&quot;</value>
            <value>&quot;Hon 5100 Series Wood Tables&quot;</value>
            <value>&quot;Hon 61000 Series Interactive Training Tables&quot;</value>
            <value>&quot;Hon 94000 Series Round Tables&quot;</value>
            <value>&quot;Hon Comfortask® Task/Swivel Chairs&quot;</value>
            <value>&quot;Hon Deluxe Fabric Upholstered Stacking Chairs&quot;</value>
            <value>&quot;Hon Deluxe Fabric Upholstered Stacking Chairs, Rounded Back&quot;</value>
            <value>&quot;Hon Every-Day® Chair Series Swivel Task Chairs&quot;</value>
            <value>&quot;Hon GuestStacker Chair&quot;</value>
            <value>&quot;Hon iLevel™ Computer Training Table&quot;</value>
            <value>&quot;Hon Metal Bookcases, Black&quot;</value>
            <value>&quot;Hon Metal Bookcases, Putty&quot;</value>
            <value>&quot;Hon Multipurpose Stacking Arm Chairs&quot;</value>
            <value>&quot;Hon Non-Folding Utility Tables&quot;</value>
            <value>&quot;Hon Olson Stacker Stools&quot;</value>
            <value>&quot;Hon Pagoda™ Stacking Chairs&quot;</value>
            <value>&quot;Hon Rectangular Conference Tables&quot;</value>
            <value>&quot;Hon Valutask™ Swivel Chairs&quot;</value>
          </bin>
          <bin value='&quot;Newell 307&quot;'>
            <value>&quot;Newell 307&quot;</value>
            <value>&quot;Newell 308&quot;</value>
            <value>&quot;Newell 309&quot;</value>
            <value>&quot;Newell 31&quot;</value>
            <value>&quot;Newell 310&quot;</value>
            <value>&quot;Newell 312&quot;</value>
            <value>&quot;Newell 314&quot;</value>
            <value>&quot;Newell 315&quot;</value>
            <value>&quot;Newell 318&quot;</value>
            <value>&quot;Newell 320&quot;</value>
            <value>&quot;Newell 321&quot;</value>
            <value>&quot;Newell 323&quot;</value>
            <value>&quot;Newell 325&quot;</value>
            <value>&quot;Newell 326&quot;</value>
            <value>&quot;Newell 327&quot;</value>
            <value>&quot;Newell 329&quot;</value>
            <value>&quot;Newell 332&quot;</value>
            <value>&quot;Newell 333&quot;</value>
            <value>&quot;Newell 335&quot;</value>
            <value>&quot;Newell 336&quot;</value>
            <value>&quot;Newell 337&quot;</value>
            <value>&quot;Newell 338&quot;</value>
            <value>&quot;Newell 339&quot;</value>
            <value>&quot;Newell 340&quot;</value>
            <value>&quot;Newell 342&quot;</value>
            <value>&quot;Newell 343&quot;</value>
            <value>&quot;Newell 346&quot;</value>
            <value>&quot;Newell 35&quot;</value>
            <value>&quot;Newell 351&quot;</value>
            <value>&quot;Newell® 3-Hole Punched Plastic Slotted Magazine Holders for Binders&quot;</value>
          </bin>
          <bin value='&quot;Sony IBM Color Diskettes, 25/Pack&quot;'>
            <value>&quot;Sony IBM Color Diskettes, 25/Pack&quot;</value>
            <value>&quot;Sony MFD2HD Formatted Diskettes, 10/Pack&quot;</value>
          </bin>
          <bin value='&quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;'>
            <value>&quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;</value>
            <value>&quot;Wilson Jones 1\&quot; Hanging DublLock® Ring Binders&quot;</value>
            <value>&quot;Wilson Jones 14 Line Acrylic Coated Pressboard Data Binders&quot;</value>
            <value>&quot;Wilson Jones Custom Binder Spines &amp; Labels&quot;</value>
            <value>&quot;Wilson Jones DublLock® D-Ring Binders&quot;</value>
            <value>&quot;Wilson Jones Easy Flow II™ Sheet Lifters&quot;</value>
            <value>&quot;Wilson Jones Elliptical Ring 3 1/2\&quot; Capacity Binders, 800 sheets&quot;</value>
            <value>&quot;Wilson Jones Hanging View Binder, White, 1\&quot;&quot;</value>
            <value>&quot;Wilson Jones Impact Binders&quot;</value>
            <value>&quot;Wilson Jones Ledger-Size, Piano-Hinge Binder, 2\&quot;, Blue&quot;</value>
            <value>&quot;Wilson Jones Standard D-Ring Binders&quot;</value>
            <value>&quot;Wilson Jones Suede Grain Vinyl Binders&quot;</value>
            <value>&quot;Wilson Jones Turn Tabs Binder Tool for Ring Binders&quot;</value>
            <value>&quot;Wilson Jones® Four-Pocket Poly Binders&quot;</value>
          </bin>
          <bin value='&quot;Xerox 188&quot;'>
            <value>&quot;Xerox 188&quot;</value>
            <value>&quot;Xerox 1880&quot;</value>
            <value>&quot;Xerox 1881&quot;</value>
            <value>&quot;Xerox 1882&quot;</value>
            <value>&quot;Xerox 1883&quot;</value>
            <value>&quot;Xerox 1885&quot;</value>
            <value>&quot;Xerox 1887&quot;</value>
            <value>&quot;Xerox 1888&quot;</value>
            <value>&quot;Xerox 1891&quot;</value>
            <value>&quot;Xerox 1892&quot;</value>
            <value>&quot;Xerox 1893&quot;</value>
            <value>&quot;Xerox 1894&quot;</value>
            <value>&quot;Xerox 1895&quot;</value>
            <value>&quot;Xerox 1896&quot;</value>
            <value>&quot;Xerox 1897&quot;</value>
            <value>&quot;Xerox 1898&quot;</value>
            <value>&quot;Xerox 1899&quot;</value>
            <value>&quot;Xerox 19&quot;</value>
            <value>&quot;Xerox 190&quot;</value>
            <value>&quot;Xerox 1903&quot;</value>
            <value>&quot;Xerox 1904&quot;</value>
            <value>&quot;Xerox 1905&quot;</value>
            <value>&quot;Xerox 1906&quot;</value>
            <value>&quot;Xerox 1907&quot;</value>
            <value>&quot;Xerox 1908&quot;</value>
            <value>&quot;Xerox 191&quot;</value>
            <value>&quot;Xerox 1910&quot;</value>
            <value>&quot;Xerox 1916&quot;</value>
            <value>&quot;Xerox 1917&quot;</value>
            <value>&quot;Xerox 1919&quot;</value>
            <value>&quot;Xerox 1920&quot;</value>
            <value>&quot;Xerox 1922&quot;</value>
            <value>&quot;Xerox 1923&quot;</value>
            <value>&quot;Xerox 1924&quot;</value>
            <value>&quot;Xerox 1926&quot;</value>
            <value>&quot;Xerox 1927&quot;</value>
            <value>&quot;Xerox 1928&quot;</value>
            <value>&quot;Xerox 1929&quot;</value>
            <value>&quot;Xerox 193&quot;</value>
            <value>&quot;Xerox 1930&quot;</value>
            <value>&quot;Xerox 1932&quot;</value>
            <value>&quot;Xerox 1933&quot;</value>
            <value>&quot;Xerox 1934&quot;</value>
            <value>&quot;Xerox 1935&quot;</value>
            <value>&quot;Xerox 1936&quot;</value>
            <value>&quot;Xerox 1937&quot;</value>
            <value>&quot;Xerox 1938&quot;</value>
            <value>&quot;Xerox 1939&quot;</value>
            <value>&quot;Xerox 194&quot;</value>
            <value>&quot;Xerox 1940&quot;</value>
            <value>&quot;Xerox 1941&quot;</value>
            <value>&quot;Xerox 1947&quot;</value>
            <value>&quot;Xerox 1948&quot;</value>
            <value>&quot;Xerox 1949&quot;</value>
            <value>&quot;Xerox 195&quot;</value>
            <value>&quot;Xerox 1950&quot;</value>
            <value>&quot;Xerox 1951&quot;</value>
            <value>&quot;Xerox 1952&quot;</value>
            <value>&quot;Xerox 1953&quot;</value>
            <value>&quot;Xerox 1954&quot;</value>
            <value>&quot;Xerox 1959&quot;</value>
            <value>&quot;Xerox 196&quot;</value>
            <value>&quot;Xerox 1961&quot;</value>
            <value>&quot;Xerox 1962&quot;</value>
            <value>&quot;Xerox 1963&quot;</value>
            <value>&quot;Xerox 1964&quot;</value>
            <value>&quot;Xerox 1966&quot;</value>
            <value>&quot;Xerox 1968&quot;</value>
            <value>&quot;Xerox 197&quot;</value>
            <value>&quot;Xerox 1971&quot;</value>
            <value>&quot;Xerox 1972&quot;</value>
            <value>&quot;Xerox 1973&quot;</value>
            <value>&quot;Xerox 1974&quot;</value>
            <value>&quot;Xerox 1976&quot;</value>
            <value>&quot;Xerox 1977&quot;</value>
            <value>&quot;Xerox 1978&quot;</value>
            <value>&quot;Xerox 1979&quot;</value>
            <value>&quot;Xerox 198&quot;</value>
            <value>&quot;Xerox 1980&quot;</value>
            <value>&quot;Xerox 1981&quot;</value>
            <value>&quot;Xerox 1982&quot;</value>
            <value>&quot;Xerox 1983&quot;</value>
            <value>&quot;Xerox 1984&quot;</value>
            <value>&quot;Xerox 1985&quot;</value>
            <value>&quot;Xerox 1986&quot;</value>
            <value>&quot;Xerox 1988&quot;</value>
            <value>&quot;Xerox 1989&quot;</value>
            <value>&quot;Xerox 199&quot;</value>
            <value>&quot;Xerox 1991&quot;</value>
            <value>&quot;Xerox 1992&quot;</value>
            <value>&quot;Xerox 1993&quot;</value>
            <value>&quot;Xerox 1994&quot;</value>
            <value>&quot;Xerox 1995&quot;</value>
            <value>&quot;Xerox 1996&quot;</value>
            <value>&quot;Xerox 1997&quot;</value>
            <value>&quot;Xerox 1998&quot;</value>
            <value>&quot;Xerox 2&quot;</value>
            <value>&quot;Xerox 20&quot;</value>
            <value>&quot;Xerox 200&quot;</value>
            <value>&quot;Xerox 204&quot;</value>
            <value>&quot;Xerox 207&quot;</value>
            <value>&quot;Xerox 209&quot;</value>
            <value>&quot;Xerox 21&quot;</value>
            <value>&quot;Xerox 210&quot;</value>
            <value>&quot;Xerox 212&quot;</value>
            <value>&quot;Xerox 213&quot;</value>
            <value>&quot;Xerox 214&quot;</value>
            <value>&quot;Xerox 215&quot;</value>
            <value>&quot;Xerox 216&quot;</value>
            <value>&quot;Xerox 217&quot;</value>
            <value>&quot;Xerox 220&quot;</value>
            <value>&quot;Xerox 221&quot;</value>
            <value>&quot;Xerox 223&quot;</value>
            <value>&quot;Xerox 224&quot;</value>
            <value>&quot;Xerox 226&quot;</value>
            <value>&quot;Xerox 227&quot;</value>
            <value>&quot;Xerox 229&quot;</value>
            <value>&quot;Xerox 23&quot;</value>
            <value>&quot;Xerox 231&quot;</value>
            <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
            <value>&quot;Xerox Blank Computer Paper&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;*Staples* Highlighting Markers&quot;' value='Staples' />
          <alias key='&quot;3M Hangers With Command Adhesive&quot;' value='3M' />
          <alias key='&quot;Acco 3-Hole Punch&quot;' value='Acco' />
          <alias key='&quot;Acme Design Line 8\&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8\&quot; Cut&quot;' value='Acme' />
          <alias key='&quot;Avery 05222 Permanent Self-Adhesive File Folder Labels for Typewriters, on Rolls, White, 250/Roll&quot;' value='Avery' />
          <alias key='&quot;Belkin 105-Key Black Keyboard&quot;' value='Belkin' />
          <alias key='&quot;Boston 1645 Deluxe Heavier-Duty Electric Pencil Sharpener&quot;' value='Boston' />
          <alias key='&quot;Canon BP1200DH 12-Digit Bubble Jet Printing Calculator&quot;' value='Canon' />
          <alias key='&quot;Eldon Advantage® Chair Mats for Low to Medium Pile Carpets&quot;' value='Eldon' />
          <alias key='&quot;Epson C62 Color Inkjet Printer&quot;' value='Epson' />
          <alias key='&quot;Fellowes 17-key keypad for PS/2 interface&quot;' value='Fellowes' />
          <alias key='&quot;Hon 2090 “Pillow Soft” Series Mid Back Swivel/Tilt Chairs&quot;' value='Hon' />
          <alias key='&quot;Newell 307&quot;' value='Newell' />
          <alias key='&quot;Sony IBM Color Diskettes, 25/Pack&quot;' value='Sony' />
          <alias key='&quot;Wilson Jones “Snap” Scratch Pad Binder Tool for Ring Binders&quot;' value='Wilson Jones' />
          <alias key='&quot;Xerox 188&quot;' value='Xerox' />
          <alias key='&quot;Zoom V.92 V.44 PCI Internal Controllerless FaxModem&quot;' value='Other' />
        </aliases>
      </column>
      <column aggregation='Avg' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Unit Price]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Versandart]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' hidden='true' name='[Year Month]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' hidden='true' name='[Z Calc Order ID]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Z City Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='datetime' hidden='true' name='[Z Date first order]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' hidden='true' name='[Z Lookup Order ID]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' hidden='true' name='[Z Order ID]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[Z Order amount percentile]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' hidden='true' name='[Z Running sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' hidden='true' name='[产品子类别]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[产品容器]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[产品类别]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[出荷モード]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[客户细分]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[注文の優先度]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[装运模式]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[製品カテゴリー]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[製品コンテナー]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[製品サブカテゴリー]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[订单优先级]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[顧客区分]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[고객 세그먼트]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[선적 모드]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[제품 범주]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[제품 컨테이너]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[제품 하위 범주]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[주문 우선 순위]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Profit]' derivation='Sum' forecast-column-base='[sum:Profit:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='None' name='[none:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8821129170240873]' derivation='Sum' name='[sum:Calculation_8821129170240873:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9100813121824802]' derivation='User' name='[usr:Calculation_9100813121824802:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Sub-Category]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Segment]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Department,Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category]' />
          <groupfilter function='level-members' level='[Product Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Countries - high profit &amp; sales' name='[Countries - high avg profit &amp; sales]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Côte-d&apos;Ivoire&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country / Region,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State or Province:nk]' />
        </groupfilter>
      </group>
      <group caption='Top Customers by Profit' name='[Highest profit customers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country / Region,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State or Province:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='ID fields'>
          <field>[Customer ID]</field>
          <field>[Order ID]</field>
          <field>[Row ID]</field>
          <desc>
            <formatted-text>
              <run>All ID fields from coarse to fine grain</run>
            </formatted-text>
          </desc>
        </drill-path>
        <drill-path name='Mapping items'>
          <field>[Country]</field>
          <field>[State or Province]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
          <desc>
            <formatted-text>
              <run>Filled maps available for 1st two levels</run>
            </formatted-text>
          </desc>
        </drill-path>
        <drill-path name='Product'>
          <field>[Product Category]</field>
          <field>[Product Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.466321' group-percentage='0.0777202' measure-ordering='alphabetic' measure-percentage='0.204663' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Côte-d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Australasia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#1c73b1'>
              <bucket>2012</bucket>
            </map>
            <map to='#67add4'>
              <bucket>2011</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>2010</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[yr:Order Date:ok]' type='palette'>
            <map to='#26456e'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Profit:qk]&quot;</bucket>
                <bucket>2013</bucket>
              </multibucket>
            </map>
            <map to='#69afd5'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Profit:qk]&quot;</bucket>
                <bucket>2012</bucket>
              </multibucket>
            </map>
            <map to='#7b3014'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Sales:qk]&quot;</bucket>
                <bucket>2013</bucket>
              </multibucket>
            </map>
            <map to='#90ccdf'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Profit:qk]&quot;</bucket>
                <bucket>2011</bucket>
              </multibucket>
            </map>
            <map to='#b4d4da'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Profit:qk]&quot;</bucket>
                <bucket>2010</bucket>
              </multibucket>
            </map>
            <map to='#d74401'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Sales:qk]&quot;</bucket>
                <bucket>2012</bucket>
              </multibucket>
            </map>
            <map to='#f0c294'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Sales:qk]&quot;</bucket>
                <bucket>2010</bucket>
              </multibucket>
            </map>
            <map to='#fd8938'>
              <multibucket>
                <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Sales:qk]&quot;</bucket>
                <bucket>2011</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[usr:Calculation_9100813121824802:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales new:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Sales:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[fVal:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Calculation_8821129170240873:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit new:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Sub-Category:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Computer Peripherals&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Storage &amp; Organization&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Office Furnishings&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Copiers and Fax&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Binders and Binder Accessories&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Telephones and Communication&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pens &amp; Art Supplies&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Office Machines&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Rubber Bands&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Scissors, Rulers and Trimmers&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chairs &amp; Chairmats&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Category:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Challenge 2'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal'>
            </column>
            <column caption='Department' datatype='string' name='[Product Category]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Challenge 3'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column caption='Department' datatype='string' name='[Product Category]' role='dimension' type='nominal'>
            </column>
            <column caption='Item' datatype='string' name='[Product Name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>We don&apos;t translate this field</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' included-values='in-range'>
            <min>-39743.177832000001</min>
            <max>19883.0</max>
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Name:nk]' />
              <size column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.7900552749633789' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1062' />
                <format attr='maxwidth' value='1062' />
                <format attr='minheight' value='617' />
                <format attr='maxheight' value='617' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Challenge 4'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk] * [Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)])</rows>
        <cols>([Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk] * [Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Challenge 5'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Exclusions (Country / Region,State)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:State or Province:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nuevo León&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Inclusions (Country / Region,State)]'>
            <groupfilter function='crossjoin' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;California&quot;' />
                <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Texas&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[Inclusions (Country / Region,State)]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[Exclusions (Country / Region,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]' field-type='quantitative' max='-10655289.867589569' min='-13723678.616137343' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]' field-type='quantitative' max='7382100.240744438' min='757169.98819811037' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <geometry column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]</rows>
        <cols>([Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk] * [Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Challenge 6'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Shipping Cost]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk]'>
            <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Delivery Truck&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[avg:Shipping Cost:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[avg:Shipping Cost:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <geometry column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Challenge 7'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column caption='Department' datatype='string' name='[Product Category]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Shipping Cost]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Virginia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' included-values='in-range'>
            <min>43000.0</min>
            <max>55000.0</max>
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]' field-type='quantitative' max='-6092182.5050085522' min='-14850353.297930006' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]' field-type='quantitative' max='6835116.6600272693' min='1751587.6108903587' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <text column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' />
              <text column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]' />
              <text column='[Sample - Superstore Sales Multi-language (Extract) Extract].[avg:Shipping Cost:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]' />
              <geometry column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Challenge1'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' included-values='in-range'>
            <min>-15865.728499999999</min>
            <max>10817.0</max>
          </filter>
          <filter class='quantitative' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' included-values='in-range'>
            <min>19621.0</min>
            <max>534597.09999999986</max>
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <size column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Dual Axis Map'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column caption='Department' datatype='string' name='[Product Category]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Exclusions (Country / Region,State)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:State or Province:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nuevo León&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Inclusions (Country / Region,State)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nuevo León&quot;' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Alabama&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Arizona&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Arkansas&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;California&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Colorado&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Connecticut&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Delaware&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;District of Columbia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Florida&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Idaho&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Illinois&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Indiana&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Iowa&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Kansas&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Kentucky&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Louisiana&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Maine&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Maryland&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Massachusetts&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Michigan&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Minnesota&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Mississippi&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Missouri&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Montana&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nebraska&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nevada&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Hampshire&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Jersey&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Mexico&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New York&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;North Carolina&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;North Dakota&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Ohio&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Oklahoma&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Oregon&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Pennsylvania&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Rhode Island&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;South Carolina&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;South Dakota&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Tennessee&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Texas&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Utah&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Vermont&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Virginia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Washington&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;West Virginia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Wisconsin&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Wyoming&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[Inclusions (Country / Region,State)]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[Exclusions (Country / Region,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Region:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <geometry column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]' />
              <size column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' />
              <wedge-size column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)] + [Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)])</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Multiple Maps'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Exclusions (Country / Region,State)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:State or Province:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Ontario&quot;' />
                    <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Quebec&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Jalisco&quot;' />
                    <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nuevo León&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Inclusions (Country / Region,State)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nuevo León&quot;' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Alabama&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Arizona&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Arkansas&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;California&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Colorado&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Connecticut&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Delaware&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;District of Columbia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Florida&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Idaho&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Illinois&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Indiana&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Iowa&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Kansas&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Kentucky&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Louisiana&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Maine&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Maryland&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Massachusetts&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Michigan&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Minnesota&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Mississippi&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Missouri&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Montana&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nebraska&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Nevada&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Hampshire&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Jersey&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New Mexico&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;New York&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;North Carolina&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;North Dakota&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Ohio&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Oklahoma&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Oregon&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Pennsylvania&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Rhode Island&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;South Carolina&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;South Dakota&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Tennessee&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Texas&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Utah&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Vermont&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Virginia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Washington&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;West Virginia&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Wisconsin&quot;' />
                  <groupfilter function='member' level='[none:State or Province:nk]' member='&quot;Wyoming&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[Exclusions (Country / Region,State)]</column>
            <column>[Sample - Superstore Sales Multi-language (Extract) Extract].[Inclusions (Country / Region,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
              <geometry column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk] * [Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)])</rows>
        <cols>([Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk] * [Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore Sales Multi-language (Extract) Extract' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore Sales Multi-language (Extract) Extract'>
            <column caption='Country / Region' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Missourri&quot;' value='&quot;Missouri&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]' field-type='quantitative' max='21363426.897347618' min='-14032387.577446578' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]' field-type='quantitative' max='12569082.812905001' min='-7975805.8126689475' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' />
              <geometry column='[Sample - Superstore Sales Multi-language (Extract) Extract].[Geometry (generated)]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]' />
              <lod column='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#439ab9' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore Sales Multi-language (Extract) Extract].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore Sales Multi-language (Extract) Extract].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Multiple Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dual Axis Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Region:nk]' type='color' />
            <card pane-specification-id='2' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]' type='color' />
            <card pane-specification-id='2' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Challenge1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Challenge 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Challenge 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='1' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Sub-Category:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Sales:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Challenge 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Challenge 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Segment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Challenge 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[avg:Shipping Cost:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[avg:Shipping Cost:qk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Challenge 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[avg:Shipping Cost:qk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Country:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Customer Name:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Category:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Container:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Name:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Product Sub-Category:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:Ship Mode:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[none:State or Province:nk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[sum:Sales:qk]</field>
          <field>[Sample - Superstore Sales Multi-language (Extract) Extract].[usr:Calculation_9411129161810124:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Multiple Maps' width='192'>
      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
      zoFkIs5Oqbp3/SlBTAgtkcF2OmaPopCMx7h4corpvMHw8BDT09Nk0mm2traCWh8hpXsVYIUd
      Nfm6qqrMzc1x585tqtVK4FzKzz0Ocrkc4wMF3h7JMJ6XIjOK0iGJh2FoVCprtNvtA+ujonCM
      olMikcBuG+D5QxEzDTKZBGdfGSKZcZienmZqaord0i6tViuIsMkZ2qh3R+Eg/3b92jXmHj4I
      ggwifHpYGJ2Y4MJgku8cn0A2yBRhIvACLYqfGj3K5qM6Uy/nMOKdGHOAtf9hemKY+ZUNtorl
      iDf0joGHJ6uQbLFE0v9NUaAjEZc3d/jg/iJNR+He9as8/OJD1pcXcF2Xe3du8+jRo66IiPxO
      +V9U+9VqlcXlaxiJVe7c+yK4T8Taxfeo0ggBiqJQifkT/+0TRzrPdP55gOdPnqnpNFeuvLdv
      xdVBOIavy59Nw5fqYqp6wI2PF1i7X8PzFK7efJc7Dz9ic3Oder3Ox59coVQq9dQovdoTtFqY
      f4S+s4C5Pcfy0mJwj1jZJ56NWq0mYHh8knurW7xydIJMIkaYVHgv0LYog4ODrP1NjXhaJzPg
      S1mr5VDZbuM6HlrZlxRnT89w49YcA325zpO9Jr4XjFav0ud0Jktpe4Mh089MusB8cZPL74yz
      uX4fp+4wPpBjyGhw5/c/x7Is5te3SQyM8+d//o98HC0rmLxR9ULy9+XlRYbH4hQKaUo7e6Xb
      4nnLsojH40H2tRdk8wXevfcBb4xOoqOCBzv1JtvVOm3boTlgkkiYJJJbQchXDllG4WhZFjs7
      Oz3DkfWag+OC1sHLatsMllzO9ye5/fG7KAWYPpllvf4Jd5frVMsNrnzyW777+k85d+5ckCwU
      Gi8KDzE2nuextjDH5fEBmu02K5Kd32q1utZytNvtnuuBC4UC99e2ySfjjPf786Vl2aztlrEd
      l526++IwgGmaTBzL0y67rG3V0TQVM6YzMJRBNzW23Bo7pQr5bJqF1S2Oz4yTSsTpFmTCpg1M
      Yvw9I6PBstrozp49X6rUiQ2Y6LrGyHgexqFWbfHr924Rywzz0tnzzG28SzpuUq1W6e/vJxaL
      Ua1WabVakQsuhPovFos8mr/FxddGAahUt3FdF13Xg5ogRdmreuxlYglapd9M8dtP5nF1UGMK
      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
    </thumbnail>
    <thumbnail height='192' name='Dual Axis Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Challenge1' width='192'>
      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
      /w+hqGKMiqAbAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='Challenge 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Challenge 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Challenge 4' width='192'>
      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
      /weQWi1RpYzJ4AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Challenge 5' width='192'>
      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
      U7Zsp9NBr9dDp9NBuVy2YwWGqlzbmpqxXXiV0iubzaLdblszi2WlOeeLxPjGJn/7hJEuQwGU
      hke2p4WVni9jBguUMrTJ2H4mk0GxWEyYOXSeJdC2nwSPNFvb7XZiYcyFx4TATauUIO0yObn8
      7ZKorjpc913tEsGuaJG872IeX2RE16+BZbjgxgWeXC5n49S6vwBSNZav3654NZlA91uWkzhx
      EboLbgSXciwuPMp+uAScHjsXHFme5qkMxRJcDuokeJRl0/Co6yQ+vEk9Ugq4nAlg4M3HcYxO
      p5PgZl9dut40GHdf1y0RItW0rtNlPulrW1tbMMYgn8+jWCza+81mc0RKFwoF50YSlybTNjYh
      m80m/AHXhLn6rcv4QDOcqw7db0ngWvtrPPoYgQtl9Kl4jzlZXGMxZhBUaDabTkGZhkfZD4ZV
      aZqlCSeLmzRk+IBSv9PpWC//Rrev+ThU92Vcv7Qkks9Is2ycGeCzd6VW6ff7I+OUJpGuaxIm
      pgChHdxqtVIdS90//V2XSbsvy7l8DAmaKdJAj7vb7SZW10kvktjJBLpfNyIIO52ONSlbrdZE
      W1OdJpD+7UKgMcY6N9PT08jlcuh0OtZckMQzTqKxrCSacUzguyaR5jMh0uqWRENpIqVXu91O
      ZH5KU9Blkrn654JWq4WpqSmUy2VEUZTIsJT4lO1KfOk2NX7p4/jaT8OJ9rHkWFzmkMYjn5dh
      7ziOsbW1lXhG4nEcw6bhsVKp2DRqjUcACZpMaIBxatKlnkgQzOrTnXOtivoYQiJUSm6NGHnf
      BdLh0WPy2fDMLGSbfF46uqyr3W5bDQgMY91Swsl+aHAxYRRFNhrEFVWuZGucu/CoQZoA0vnj
      vXH1aLyxzz5BKQmb45FtAxhJk2YQpdvtotfr2cVH7VOm4dFFk8RjPp+3glkzsaUjV0NpHOYy
      FQBYBmCWpCsPx1cfgJHYvYsZ5XXdR9kW72mJk6ZJXHayTHYrFos2jh2GIba2tlCr1Wweu1zS
      H2dna2bnNRJpqVSyC3FcmZbP+upjez5G9Jl448wn4scnofU8yE89v8Vi0fo8pVIJtVoNtVrN
      alWuF/j6o8fNexqPwMBHpc+mQ/a2fLxT8/r6ujOFliDvadNCVspytMfSNkNIKeUDqb40YjSD
      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
      hv8f0qQ4r90UQI4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Challenge 6' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Challenge 7' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
